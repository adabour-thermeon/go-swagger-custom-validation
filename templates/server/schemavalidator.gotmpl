
{{ define "primitivefieldvalidator" }}
  {{ if .Required }}
    {{- if and (eq .GoType "string") (not .IsNullable) }}
  if err := validate.RequiredString({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, {{ if .IsAliased }}{{ .GoType }}({{ end }}{{.ValueExpression }}{{ if .IsAliased }}){{ end }}); err != nil {
    {{- else }}
  if err := validate.Required({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, {{ if not (or .IsAnonymous .IsNullable) }}{{ .GoType }}({{ end }}{{.ValueExpression }}{{ if not (or .IsAnonymous .IsNullable) }}){{ end }}); err != nil {
    {{- end }}
    return err
  }
  {{- end }}
  {{ if .MinLength }}
    if err := validate.MinLength({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, {{ .ToString }}, {{.MinLength }}); err != nil {
    return err
  }
  {{- end }}
  {{ if .MaxLength }}
  if err := validate.MaxLength({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, {{ .ToString }}, {{.MaxLength }}); err != nil {
    return err
  }

  // Validate MaxBytes Length
  if len([]byte({{ .ToString}})) > {{.MaxLength}} {
		return errors.TooLong({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, {{.MaxLength }}, {{ .ToString }})
  }
  {{ end }}
  {{ if .Pattern }}
  if err := validate.Pattern({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, {{ .ToString }}, `{{ escapeBackticks .Pattern }}`); err != nil {
    return err
  }
  {{- end }}
  {{ if .Minimum }}
    {{ template "validationMinimum" . }}
  {{ end }}
  {{ if .Maximum }}
    {{ template "validationMaximum" . }}
  {{ end }}
  {{ if .MultipleOf }}
    {{ template "validationMultipleOf" . }}
  {{ end }}
  {{ if .Enum }}
  // value enum
  if err := {{.ReceiverName }}.validate{{ pascalize .Name }}{{ .Suffix }}Enum({{ if .Path }}{{ .Path }}{{ else }}""{{ end }}, {{ printf "%q" .Location }}, {{ if .IsNullable }}*{{ end }}{{.ValueExpression }}); err != nil {
    return err
  }
  {{- end }}
  {{ if and .IsCustomFormatter (not .IsStream) (not .IsBase64) }}
    {{ template "validationCustomformat" . }}
  {{- end }}
{{ end }} 